---
layout: post
title: Codewars集合贴
date:  2015-10-11 19:07:27
summary:
categories: codewars
tags: js
---

> 看到一个非常巧妙的解答

## 第一题

*Description*

> You are in a room with 100 vending machines, each one numbered 0 to 99. Each vending machine has 100 candy bars inside. For 99 of the vending machines, all of their candy bars weigh 100 grams, but one special machine has candy bars that weigh 101 grams.

> Candy bars you vend are put into a pile, but you can only weigh the pile at most 10 times.

> Determine the number of the machine with the heavy candy bars.


*Best Practices*

{% highlight javascript %}
//一次就可以分辨出那个有问题
function findSpecialIdx(vms) {
  // Solution requiring only a single weighing
  for (var i = 0; i < 100 ; i++) {
    for (var j = 0; j < i; j++) {
      vms[i].vend();
    }
  }
  return vms.weigh() % 100;
};

///////////////////////////////////////////////////////////////////
function findSpecialIdx(vms) {
  var expectedWeight = 0;
  var low = 0;
  var high = 100;
  while (low+1 < high) {
    var mid = Math.floor( (low + high) / 2 );
    for (var i=0; i < mid; ++i) {
      vms[i].vend();
      expectedWeight += 100;
    }
    var weight = vms.weigh();
    if (weight == expectedWeight) {
      low = mid;
    } else {
      high = mid;
      expectedWeight = weight;
    }
  }
  return low;
};

//////////////////////////////////////////////////////////
function findSpecialIdx(vms)
{
  var previousWeight, currentWeight = 0;
  var startIdx = 0;
  var endIdx = 99;
  while (startIdx != endIdx)
  {
    middelIdx = getMiddelIdx(startIdx, endIdx);
    makePile(vms, startIdx, middelIdx);
    previousWeight = currentWeight;
    currentWeight = vms.weigh();
    (currentWeight - previousWeight) % 100 === 0 ? startIdx = middelIdx + 1 : endIdx = middelIdx;  // %100 的原因是有可能多一罐，这里要注意
  }
  return startIdx;
}

function getMiddelIdx(startIdx, endIdx)
{
  return startIdx + Math.floor((endIdx - startIdx) / 2);
}

function makePile(vms, startIdx, middelIdx)
{
  for (var idx = startIdx; idx <= middelIdx; idx++)
    vms[idx].vend();
}
{% endhighlight %}

## 第二题

*Description*

>Number is a palindrome if it is equal to the number with digits in reversed order. For example, 5, 44, 171, 4884 are palindromes and 43, 194, 4773 are not palindromes.
Write a method palindrome_chain_length which takes a positive number and returns the number of special steps needed to obtain a palindrome. The special step is: "reverse the digits, and add to the original number". If the resulting number is not a palindrome, repeat the procedure with the sum until the resulting number is a palindrome.

*Best Practices*

{% highlight javascript %}
function palindromeChainLength(n) {
  var count = 0, rev = 0;
  while(n != (rev = parseInt(n.toString().split('').reverse().join('')))) {
    n += rev;
    count++;
  }
  return count;
};

///////////////////////////////////////////////////
/*使用闭包*/
var palindromeChainLength = function (n) {
    var chain = 0;
    var find = function (num) {
        var s = num + '';
        var s_rev = s.split('').reverse().join('');
        if (s_rev == s)
            return chain;
        chain++;
        return find(+s_rev + num);  // tips:+'12' ---> 12,字符串快速变数字，而不用parseInt,挺好
    };
    return find(n);
};
{% endhighlight %}
